# Import necessary libraries
import numpy as np
import matplotlib.pyplot as plt
import imageio.v3 as iio

# Step 1: Load an image from the internet (Replace URL with any image link)
image_url = "https://upload.wikimedia.org/wikipedia/commons/thumb/4/47/PNG_transparency_demonstration_1.png/600px-PNG_transparency_demonstration_1.png"

# Read the image into a NumPy array
img_array = iio.imread(image_url)

# Step 2: Display the original image
plt.figure(figsize=(10, 5))

plt.subplot(2, 2, 1)
plt.imshow(img_array)
plt.title("Original Image")
plt.axis("off")  # Hide axes

# Step 3: Rotate the image (90 degrees counterclockwise)
rotated_img = np.rot90(img_array)

plt.subplot(2, 2, 2)
plt.imshow(rotated_img)
plt.title("Rotated Image (90Â°)")
plt.axis("off")

# Step 4: Flip the image horizontally
flipped_img = np.fliplr(img_array)

plt.subplot(2, 2, 3)
plt.imshow(flipped_img)
plt.title("Flipped Image (Left-Right)")
plt.axis("off")

# Step 5: Convert image to grayscale using the given formula
gray_img = np.dot(img_array[..., :3], [0.299, 0.587, 0.114])  # Weighted sum of RGB channels

plt.subplot(2, 2, 4)
plt.imshow(gray_img, cmap="gray")  # Display grayscale image
plt.title("Grayscale Image")
plt.axis("off")

# Show all plots
plt.tight_layout()
plt.show()